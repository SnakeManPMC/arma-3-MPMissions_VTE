

; force a chopper to land v1.4

; changes:
; 1.4 - removed the double check to ensure the waypoint is not activated. was causing issues.
; 1.3 - added the variables var_getout, var_unload and var_eject which will make the units
; in the chopper either getout (all units), unload (all units bar driver and gunner) or
; eject (all units bail out at one second intervals, gunner and driver last)
; 1.2 - script can be cancelled at any time by setting 'var_cancel_landing' equal to the chopper
; 1.2 - the 'fly out height' can be set via the variable '_flyouthgt'
; 1.1 - added the velocity check to ensure the chopper has slowed before touching down
; 1.1 - added the check for Ch47D so the bigger chopper lands well

; by snYpir

; can be called with:
; [unit to land,position where it is to land (should be a waypoint)] exec "land_chopper.sqs"

; to cancel a landing:
; set 'var_cancel_landing = choppername' in the on-activation field of the waypoint previously passed
; into this script

; to force all to disembark from the chopper
; set 'var_getout = choppername' in the on-activation field of the waypoint previously passed
; into this script

; to force cargo units to disembark from the chopper
; set 'var_unload = choppername' in the on-activation field of the waypoint previously passed
; into this script

; to force all to eject from the chopper
; set 'var_eject = choppername' in the on-activation field of the waypoint previously passed
; into this script or anywhere for that matter

; this is the unit we want to force to land
_unit = _this select 0

; this is a position where the chopper will land (expected to be the chopper's waypoint)
_landingpos = _this select 1

; this is the distance away from _landingpos to make the chopper drop to earth
; needs to be big for larger, less manouverable choppers (40 for chinooks)
; 30 is good for blackhawks and 20 is good for hueys. Default is 30
_mindis = 30

; this is the height the chopper will hover once 'landed' (minimum is 2). If you increase this value,
; the chopper will hover off the ground
_minheight = 2

; this is the maximum speed that the chopper will touch down at. it will not touch down until it is
; going slower than this speed. increase for flare landings (to around 25). careful, some choppers (such
; as blackhawks) don't do flare landings very well. The default for this value is 15.
_landvel = 15

; this is the 'fly out height' if the landing is cancelled
_flyouthgt = 30

; this check can be taken out if you wish. it simply increases the landing distance and slows the
; landing speed for chinooks. you could add other 'big' helicopter types if you wish
? "Ch47D" counttype [_unit] == 1 : _mindis = _mindis * 2; _landvel = _landvel / 2



; ----------- edit beyond here at own risk ------------

; get initial height of chopper
_hgt = getpos _unit select 2

_driver = driver _unit
_gunner = gunner _unit

_grp = group _driver

_grp lockwp true

_getout = false
_eject = false
_cancel = false
_unload = false

? _minheight < 2 : _minheight = 2

; get distance chopper to landing pos at start
_x1 = _landingpos select 0
_y1 = _landingpos select 1
_x2 = getPos _unit select 0
_y2 = getPos _unit select 1
_dis = sqrt( (_x1-_x2)^2 + (_y1-_y2)^2 )

; determine ratio
_ratio = _dis / _hgt

#loop

_x1 = _landingpos select 0
_y1 = _landingpos select 1
_x2 = getPos _unit select 0
_y2 = getPos _unit select 1
_dis = sqrt( (_x1-_x2)^2 + (_y1-_y2)^2 )

_unit flyinheight (_dis / _ratio)

~0.1

? _dis < _mindis : goto "end"
? var_cancel_landing == _unit : _cancel = true; var_cancel_landing = nil; goto "end2"
? var_eject == _unit : _eject = true; var_eject = nil; goto "end2"
? var_getout == _unit : _getout = true; var_getout = nil
? var_unload == _unit : _unload = true; var_unload = nil
? {alive _x} count units _grp == 0 : exit

; has the unit slowed (maybe missed the waypoint?) drop the unit where it is
_x = ((velocity _unit select 0) * sin (getdir _unit)) * 3.445
_y = ((velocity _unit select 1) * cos (getdir _unit)) * 3.445
? (_x + _y) < 20 : goto "end"

goto "loop"

#end

; drop the chopper close to the ground
_unit flyinheight _minheight * 2

; pause until the chopper has almost stopped
#velloop
~0.1
? var_cancel_landing == _unit : _cancel = true; var_cancel_landing = nil; goto "end2"
? var_eject == _unit : _eject = true; var_eject = nil; goto "end2"
? var_getout == _unit : _getout = true; var_getout = nil
? var_unload == _unit : _unload = true; var_unload = nil
_dir = getdir _unit
_x = ((velocity _unit select 0) * sin _dir) * 3.445
_y = ((velocity _unit select 1) * cos _dir) * 3.445
_xy = _x + _y

? _xy > _landvel : goto "velloop"

; put the chopper on the ground
_unit flyinheight _minheight

#endloop
? var_cancel_landing == _unit : _cancel = true; var_cancel_landing = nil; goto "end2"
? var_eject == _unit : _eject = true; var_eject = nil; goto "end2"
? var_getout == _unit && !_getout : _getout = true; var_getout = nil; goto "end2"
? _getout : goto "end2"
? var_unload == _unit && !_unload : _unload = true; var_unload = nil; goto "end2"
? _unload : goto "end2"
? {alive _x} count units _grp == 0 : exit
~0.1
goto "endloop"

#end2


; added in 1.3 - force all of the occupants of _unit to get out?
? _cancel : goto "nogetout"
? _eject : goto "ejectnow"

; wait until the chopper is on the ground?
@getpos _unit select 2 < 2

; get units out of chopper
#ejectnow
_ejectpause = 0.5
? _eject : _ejectpause = 1
_aR_crew = crew _unit

; eject units
_i = 0
#loop_eject
? (_aR_crew select _i) != _driver && (_aR_crew select _i) != _gunner : (_aR_crew select _i) action ["EJECT", _unit]; unassignvehicle (_aR_crew select _i)
~_ejectpause
_i = _i + 1
? _i != count _aR_crew : goto "loop_eject"

; get the pilot and gunner out if not unloading
? _unload : goto "unload"
_gunner action ["EJECT", _unit];
unassignvehicle _gunner
~_ejectpause
_driver action ["EJECT", _unit];
unassignvehicle _driver
#unload

@(count crew _unit == 0 && !_unload) || (count crew _unit == 2 && _unload) || {alive _x} count units _grp == 0

#nogetout

; make sure the message gets through and the waypoint is unlocked
_pos = getpos leader _grp
#stupidailoop
_unit flyinheight _flyouthgt
_grp lockwp false
~0.5
_x1 = _pos select 0
_y1 = _pos select 1
_x2 = getPos (leader _grp) select 0
_y2 = getPos (leader _grp) select 1
_dis = sqrt( (_x1-_x2)^2 + (_y1-_y2)^2 )
? _dis < 10 || {alive _x} count units _grp == 0 : goto "stupidailoop"

exit